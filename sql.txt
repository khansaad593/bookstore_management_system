
Below is a database schema for a bookstore management system:
1) Books Table:

book_id (Primary Key)
title
author_id (Foreign Key referencing Authors table)
genre
price
publication_date
stock_quantity

2) Authors Table:

author_id (Primary Key)
author_name
birth_date
country

3)Customers Table:

customer_id (Primary Key)
customer_name
email
phone_number
address

4)Orders Table:

order_id (Primary Key)
customer_id (Foreign Key referencing Customers table)
order_date
total_amount

5)Order Details Table:

order_detail_id (Primary Key)
order_id (Foreign Key referencing Orders table)
book_id (Foreign Key referencing Books table)
quantity
unit_price

The relationships between tables are as follows:

One-to-Many relationship between Authors and Books (One author can write many books).
One-to-Many relationship between Customers and Orders (One customer can place many orders).
One-to-Many relationship between Orders and Order Details (One order can have many order details).
Below are the SQL queries to retrieve a list of top-selling books and calculate total sales revenue for a given period:

Retrieve a list of top-selling books:
SQL Code--
SELECT b.title, a.author_name, COUNT(od.book_id) AS total_sold
FROM Books b
JOIN Authors a ON b.author_id = a.author_id
JOIN Order_Details od ON b.book_id = od.book_id
GROUP BY b.title, a.author_name
ORDER BY total_sold DESC
LIMIT 10; -- Limiting to top 10 books

2) Calculate total sales revenue for a given period:
SQL Code--
SELECT SUM(od.quantity * od.unit_price) AS total_revenue
FROM Orders o
JOIN Order_Details od ON o.order_id = od.order_id
WHERE o.order_date BETWEEN 'start_date' AND 'end_date';

Replace 'start_date' and 'end_date' with the actual start and end dates for the period you want to calculate revenue for.

These SQL queries should help you retrieve the desired information from your bookstore management system database. Adjust the table and column names as needed based on your specific implementation.